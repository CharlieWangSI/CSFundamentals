> What is the main difference between a stack and a queue?

A: The stack data structure implements a LIFO priority collection, and queue implements a FIFO priority. 

> What are the similarities between stacks and queues?

A: They are both common place data structure. 

> Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

A: Undo: LIFO - we use “pop” method from a Stack data structure to UNDO an action
   REDO: FIFO - we want to re-implement the latest task so we should use FIFO to access the most recent task

> Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

A: We want to use the push and pop method of a Stack data structure.

  FUNCTION REVERSE(original)
    INIT a new stack
    FOR each character in original
      CALL stack.push WITH character
    END FOR
    INIT reversed to empty string
    WHILE stack is not empty
      CALL stack.pop RETURNING character
      APPEND character to reversed
    END WHILE
    RETURN reversed
  END FUNCTION

> Implement the pop method of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure. Since the internal list is not the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

A: Pseudocode - 

FUNCTION enqueue(element)
  APPEND element to the end of the list
END FUNCTION
FUNCTION dequeue
  REMOVE FIRST element of list from list RETURNING FIRST element
  ADD FIRST element to FIRST index of REVERSED QUEUE
  RETURN REVERSED QUEUE
END FUNCTION

FUNCTION REVERSE(original)
  INIT a new Queue
  FOR each character in original
    Queue.append(character)
  END FOR
  INIT reversed to empty string
  WHILE Queue is not empty
    Queue.shift() RETURNING character
    APPEND character to reversed 
  RETURN reversed
END FUNCTION

> To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue, except for the last one which should be removed and returned.

Implement the enqueue and dequeue methods defined in the checkpoint inside your own Queue class.

A: 

FUNCTION DELETE(original)
  INIT a new queue
  FOR each item in queue
    call enqueue (item) 
  END FOR
  INIT deleted to empty string
  WHILE queue is not empty
    call dequeue
  RETURN queue
END FUNCTION
