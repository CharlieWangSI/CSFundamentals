> In your own words, explain what clean code is and why it is important.

A: Clean code has good readability, ease of maintenance, and simplicity. It would be properly named, has methods that are repeatable and serve single responsibility, and are well documented and nested.

> Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.

A: Facebook is another example of an object that relies on code and computer. If the code are not up to standard, as evident by the recent data leak, can cause huge blow both to user safety and company top line.

> 3
/FUNCTION do(x, y)              
 IF y = "F" THEN               
 SET z to (x−32) * (5/9)       
 ELSE IF y = "C" THEN          
 SET z to x * 1.8000 + 32.00   
 PRINT z                       
 END IF
END FUNCTION
/

> 4
FUNCTION fahTocel(x){
 SET z to (x−32) * (5/9)
 Print z
}

FUNCTION celTofah(x){
 SET z to x * 1.8000 + 32.00  
 Print z 
}

FUNCTION do(y)               
 IF y = "F" THEN               
   Call fahTocel                       
 ELSE IF y = "C" THEN          
   Call celTofah                    
 END IF
END FUNCTION

> 5 
A:

FUNCTION checkOutCustomer(subTotal, discountRate,paymentType)
   Set price to subTotal * discountRate + (subTotal * tax)
   PRINT "Your total due is: " + price
   IF paymentType = 'CASH' THEN
       CALL getPayment RETURNING amount
       PRINT "Change due: " + amount - price
   ELSE IF paymentType = 'CREDIT CARD' THEN
       CALL getPayment RETURNING amount
       PRINT "Your credit card has been charged: " + price
   END IF
END FUNCTION

B:
FUNCTION checkoutGuest(guest)
 IF guest.accountActive THEN
     IF NOT(guest.hasOverdueBooks) THEN
         IF guest.outstandingFees = 0 THEN
             return true
                 END IF
             END IF
          END IF
END FUNCTION

FUNCTION borrorwBook(book)
  APPEND book to guest.books
  SET book.status to "Checked Out"
  PRINT "Your books have been issued."
END FUNCTION
         

FUNCTION checkBookBorrowing(book,guest)
IF checkoutGuest(guest)==true THEN
  borrowBook(book)
ELSE
  PRINT "Unable to check out book."
END IF
END FUNCTION

C:
The code related to bank account and credit card should be separated into two classes. 

CLASS BankAccount

 FUNCTION displayBalance
    PRINT balance
 END FUNCTION

 FUNCTION deposit(amount)
    SET balance to balance + amount
 END FUNCTION

 FUNCTION withdraw(amount)
     IF balance > amount THEN
       SET balance to balance - amount
     END
 END FUNCTION

 FUNCTION checkStatus
     IF NOT(customer.hasCheckingAccount) THEN
         CALL offerCheckingAccount
     END
 END FUNCTION

CLASS CreditCard
 FUNCTION creditCardOffer
     IF NOT(customer.hasCreditCard) THEN
         CALL offerCreditCard
     END
 END FUNCTION



 ....
 ....
 ....

END

> Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.

function checkSquare(array1){
let sum
for (let i=0;i<array1.length;i++){
sum+=array1[i]
}
if (Math.pow(Math.round(Math.sqrt(sum)),2)==sum){return Math.sqrt(sum);}
else {return sum;}
}

> Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

function checkUnique(array1){
for (let i=0;i<array1.length;i++){
  const myArray=array1.filter(num=>{
    return num===array1[i];
})
  if (myArray.length>1){return true;}
  else {return false;}
}
}
