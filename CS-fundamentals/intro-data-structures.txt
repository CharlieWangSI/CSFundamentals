> A line of people at an amusement park ride.

The line is composed of members, represented as strings.
There is a front to the line, as well as a back.
When someone enters the line, place them at the end.
People may leave the line whenever they see fit, and those behind them take their place.
Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.

A: let peopleLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
   peopleLine.push(“Mary”)

c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).

A: let peopleLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
   joshIndex=peopleLine.indexOf(“Josh”)
   return joshIndex

d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?

A: let peopleLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
   emilyIndex=peopleLine.indexOf(“Emily”)
   if (emilyIndex!=null){return emilyIndex}

e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?

A: let peopleLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
   let firstLine=peopleLine.slice(0,peopleLine.indexOf(“Ava”)-1)
   let secondLine=peopleLine.slice(peopleLine.indexOf(“Ava”),peopleLine.length)
   firstLine.push(“Melissa”)
   firstLine.concat(secondLine)
   return firstLine

or 

   let peopleLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
   return peopleLine.splice(peopleLine.indexOf(“Ava”),0,”Melissa”)
   

f) If Patrick wants to leave the line, how would you delete him from the array?

   let peopleLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
   return peopleLine.splice(peopleLine.indexOf(“Patrick”),1)

> Provide another real-world example that you can model using a data structure.

A: I can create a model of “to-do” list, which is an array that contains a list of items of to-dos. An example looks like: [“walk the dog”,”feed the cat”,”read books”]

> How would your data structure allow developers to access and manipulate the data?

A: Developers can access the data using the index of the item in the array, and can manipulate the data through the methods of the array such as push and pop. 

   