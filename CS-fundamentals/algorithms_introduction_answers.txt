> Using proper pseudo-code, describe the following primitive algorithms:

Making coffee;

A: 

Pour water INTO reservoir OUTPUT carafe THEN
Put carafe INTO heatingPlate OUTPUT heatedWater THEN
Add groundedCoffee INTO heatedWater THROUGH filter OUTPUT coffeeMade THEN
RETURN coffeeMade

Washing dishes;

A:

FILL sink WITH hot water OUTPUT hotSink THEN
ADD soap INTO hotSink OUTPUT cleaningFluid THEN
SOAK dishes IN cleaningFluid OUTPUT dishes THEN
WASH dishes OUTPUT washedDishes THEN
RINSE  washedDishes OUTPUT rinsedDishes THEN 
DRY rinsedDishes OUTPUT cleanDishes THEN
PUT AWAY cleanDishes

Cooking pastas:

A:

BOIL water IN pot OUTPUT boiledWater THEN
Salt boiledWater WITH salt OUTPUT saltedWater THEN
Add pasta INTO saltedWater OUTPUT boiledPasta THEN
STIR boiledPasta OUTPUT cookedPasta THEN
DRAIN cookedPasta

As with the knot algorithm, there may be more than one way to solve the problem. It is essential to try to pick the best algorithm for a situation. Name three companies who created an algorithm that made them successful, e.g., Google's search algorithm. It doesn't need to be a tech example (such as a recipe or manufacturing a product). Google's algorithm produces more relevant results than other search engines; what about each of your cases make them stand out?

A: 

- Tik Tok uses an AI-based video recommendation algorithm to drive user engagement and keep users on the platform
- Amazon uses a machine learning product recommendation algorithm to predict userâ€™s preference and drive conversion on purchase
- Facebook uses many data points about a user to create an algorithm to push the most relevant advertisements to a user. 

> Hypothesize about what constitutes an efficient algorithm versus an inefficient algorithm.

Efficient algorithm: easy to read and understand with clear logic, little redundancy, and minimal runtime
Inefficient algorithm: hard to read and understand with unclear logic, lots of redundancy, and complex runtime